{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "semanticCommits": "enabled",
  "dependencyDashboard": true,
  "separateMajorMinor": true,
  "assignees": ["rxbn"],
  "timezone": "Europe/Zurich",
  "customManagers": [
    {
      "customType": "regex",
      "fileMatch": [".github\\/workflows\\/sync-cloudflare-nets\\.yaml$"],
      "matchStrings": ["depName=(?<depName>.*)\\s.*\\/(?<currentValue>.*?)\\/"],
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "fileMatch": [".github\\/workflows\\/helm-release-differ\\.yaml$"],
      "matchStrings": [
        "depName=(?<depName>.*)\\s.*version: (?<currentValue>.*)"
      ],
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "fileMatch": ["crds\\/cloudflare-operator\\/kustomization\\.yaml$"],
      "matchStrings": [
        "datasource=(?<datasource>.*) depName=(?<depName>.*)\\s.*\\/(?<currentValue>.*?)\\/"
      ]
    },
    {
      "customType": "regex",
      "fileMatch": ["crds\\/k8up\\/kustomization\\.yaml$"],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*)\\s.*\\/k8up-(?<currentValue>.*?)\\/"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "customType": "regex",
      "fileMatch": ["crds\\/cert-manager\\/kustomization\\.yaml$"],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\\s.*\\/(?<currentValue>.*?)\\/"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "customType": "regex",
      "fileMatch": ["crds\\/kube-prometheus-stack\\/crds\\.yaml$"],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*)\\s.*tag: (?<depName>.*)-(?<currentValue>.*)"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "customType": "regex",
      "fileMatch": ["apps\\/(.+\\/)*postgres\\.yaml$"],
      "matchStrings": ["imageName:\\s(?<depName>.*):(?<currentValue>.*)"],
      "datasourceTemplate": "docker"
    },
    {
      "customType": "regex",
      "fileMatch": [
        "crds\\/metallb\\/crds\\.yaml$",
        "crds\\/cloudnative-pg\\/crds\\.yaml$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>.*) depName=(?<depName>.*)\\s.*tag: (?<currentValue>.*)"
      ]
    }
  ],
  "kubernetes": {
    "fileMatch": [
      "(apps|base|infra)\\/(.+\\/)*(deployment|daemonset|statefulset|cronjob)\\.yaml$"
    ]
  },
  "flux": {
    "fileMatch": [
      "((apps|base|infra)\\/(.+\\/)*helmrelease|core\\/helmrepositories\\/.*)\\.yaml$"
    ]
  },
  "helm-values": {
    "fileMatch": ["(apps|base|infra)\\/(.+\\/)*helmrelease\\.yaml$"]
  },
  "packageRules": [
    {
      "matchDatasources": ["docker", "helm", "github-releases", "github-tags"],
      "matchUpdateTypes": ["patch", "minor", "major"],
      "labels": ["renovate/{{datasource}}", "dep/{{updateType}}"],
      "enabled": true
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)\\.?(?<build>\\d+)?.*?-ls(?<revision>\\d+)$",
      "matchPackageNames": [
        "/^ghcr\\.io\\/linuxserver\\/(sonarr|radarr|plex)$/"
      ]
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^v?(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-ls(?<build>\\d+)$",
      "matchPackageNames": ["/^ghcr\\.io\\/linuxserver\\/(sabnzbd|overseerr)$/"]
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z$",
      "matchPackageNames": ["quay.io/minio/minio"]
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^version-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackageNames": ["fireflyiii/core"]
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["minor", "patch"],
      "matchPackageNames": ["renovate/renovate"],
      "automerge": true,
      "automergeType": "branch",
      "ignoreTests": true
    },
    {
      "matchPackageNames": ["ghcr.io/cloudnative-pg/postgresql"],
      "additionalBranchPrefix": "{{packageFileDir}}-",
      "major": {
        "enabled": false
      }
    }
  ],
  "ignoreDeps": [
    "ghcr.io/fluxcd/helm-controller",
    "ghcr.io/fluxcd/image-automation-controller",
    "ghcr.io/fluxcd/image-reflector-controller",
    "ghcr.io/fluxcd/kustomize-controller",
    "ghcr.io/fluxcd/notification-controller",
    "ghcr.io/fluxcd/source-controller"
  ]
}
