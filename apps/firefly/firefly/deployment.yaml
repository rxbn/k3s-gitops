---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: firefly
  namespace: firefly
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: firefly
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: firefly
    spec:
      initContainers:
        - name: wait-for-database
          image: busybox:1.34.0
          command:
            - sh
            - -c
            - |
              echo 'Waiting for MariaDB to become ready...'
              until printf "." && nc -z -w 2 firefly-mariadb.firefly.svc.cluster.local 3306; do
                  sleep 2;
              done;
              echo 'MariaDB OK âœ“'
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
          resources:
            requests:
              cpu: 10m
              memory: 16Mi
            limits:
              cpu: 10m
              memory: 16Mi
      containers:
        - name: firefly
          image: fireflyiii/core:version-5.5.12
          env:
            - name: DB_DATABASE
              value: firefly
            - name: DB_HOST
              value: firefly-mariadb.firefly.svc.cluster.local
            - name: DB_PORT
              value: "3306"
            - name: DB_CONNECTION
              value: mysql
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: firefly-mariadb
                  key: MYSQL_ROOT_PASSWORD
            - name: DB_USERNAME
              value: root
          envFrom:
            - secretRef:
                name: firefly
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /var/www/html/storage/upload
              name: data
          resources: {}
      restartPolicy: Always
      automountServiceAccountToken: false
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: firefly-data
