---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: firefly
  namespace: firefly
spec:
  replicas: 1
  selector:
    matchLabels:
      app: firefly
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: firefly
    spec:
      initContainers:
        - name: wait-for-database
          image: busybox:1.36.1
          command:
            - sh
            - -c
            - |
              echo 'Waiting for PostgreSQL to become ready...'
              until printf "." && nc -z -w 2 firefly-postgres.firefly.svc.cluster.local 5432; do
                  sleep 2;
              done;
              echo 'PostgreSQL OK âœ“'
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
          resources:
            requests:
              cpu: 10m
              memory: 16Mi
            limits:
              cpu: 10m
              memory: 16Mi
      containers:
        - name: firefly
          image: fireflyiii/core:version-6.1.14
          env:
            - name: DB_CONNECTION
              value: pgsql
            - name: DB_HOST
              value: firefly-postgres.firefly.svc.cluster.local
            - name: DB_PORT
              value: "5432"
            - name: DB_DATABASE
              value: postgres
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: firefly-postgres
                  key: POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: firefly-postgres
                  key: POSTGRES_PASSWORD
            - name: AUTHENTICATION_GUARD
              value: remote_user_guard
            - name: AUTHENTICATION_GUARD_HEADER
              value: X-Auth-Request-Email
            - name: TZ
              value: Europe/Zurich
          envFrom:
            - secretRef:
                name: firefly
          volumeMounts:
            - mountPath: /var/www/html/storage/upload
              name: uploads
          ports:
            - containerPort: 8080
      restartPolicy: Always
      automountServiceAccountToken: false
      volumes:
        - name: uploads
          persistentVolumeClaim:
            claimName: firefly-uploads
