---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: keycloak
spec:
  replicas: 0
  selector:
    matchLabels:
      app: keycloak
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      initContainers:
        - name: wait-for-database
          image: busybox:1.33.1
          command:
            - sh
            - -c
            - |
              echo 'Waiting for PostgreSQL to become ready...'
              until printf "." && nc -z -w 2 keycloak-postgres.keycloak.svc.cluster.local 5432; do
                  sleep 2;
              done;
              echo 'PostgreSQL OK âœ“'
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
          resources:
            requests:
              cpu: 10m
              memory: 16Mi
            limits:
              cpu: 10m
              memory: 16Mi
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:15.0.0
          env:
            - name: DB_ADDR
              value: keycloak-postgres.keycloak.svc.cluster.local
            - name: DB_DATABASE
              value: postgres
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-postgres
                  key: POSTGRES_PASSWORD
            - name: DB_PORT
              value: "5432"
            - name: DB_SCHEMA
              value: public
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: keycloak-postgres
                  key: POSTGRES_USER
            - name: DB_VENDOR
              value: POSTGRES
            - name: KEYCLOAK_LOGLEVEL
              value: INFO
            - name: PROXY_ADDRESS_FORWARDING
              value: "true"
            - name: TZ
              value: Europe/Zurich
          envFrom:
            - secretRef:
                name: keycloak
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /auth/
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 5
      restartPolicy: Always
      automountServiceAccountToken: false
